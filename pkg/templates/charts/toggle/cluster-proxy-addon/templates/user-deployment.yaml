apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: '{{ .Values.global.namespace }}'
  name: cluster-proxy-addon-user
  labels:
    component: cluster-proxy-addon-user
    chart: cluster-proxy-addon-2.1.0
spec:
  replicas: {{ .Values.hubconfig.replicaCount }}
  selector:
    matchLabels:
      component: cluster-proxy-addon-user
      chart: cluster-proxy-addon-2.1.0
  template:
    metadata:
      labels:
        component: cluster-proxy-addon-user
        chart: cluster-proxy-addon-2.1.0
        ocm-antiaffinity-selector: cluster-proxy-addon-user
    spec:
      serviceAccountName: cluster-proxy
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
      {{- if .Values.global.deployOnOCP }}
      {{- if semverCompare ">=4.11.0" .Values.hubconfig.ocpVersion }}
        seccompProfile:
          type: RuntimeDefault
      {{- end }}
      {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
                - arm64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 70
            podAffinityTerm:
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - cluster-proxy-addon-user
          - weight: 35
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - cluster-proxy-addon-user
      containers:
      - name: controllers
        image: {{ .Values.global.imageOverrides.cluster_proxy_addon }}
        imagePullPolicy: {{ .Values.global.pullPolicy }}
        command:
          - "/cluster-proxy"
        args:
          - "controllers"
          - "--certificates-namespace={{ .Values.global.namespace }}" # keep the same with the values in manager-deployment.yaml
          - "--signer-secret-namespace={{ .Values.global.namespace }}"
          - "--agent-image={{ .Values.global.imageOverrides.cluster_proxy_addon }}"
        env:
        {{- if .Values.hubconfig.proxyConfigs }}
          - name: HTTP_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.HTTP_PROXY }}
          - name: HTTPS_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.HTTPS_PROXY }}
          - name: NO_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.NO_PROXY }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      - name: user-server
        image: '{{ .Values.global.imageOverrides.cluster_proxy_addon }}'
        imagePullPolicy: '{{ .Values.global.pullPolicy }}'
        command:
          - "/cluster-proxy"
        args:
          - "user-server"
          - "--host=proxy-entrypoint.{{ .Values.global.namespace }}.svc"
          - "--port=8090"
          - "--proxy-ca-cert=/proxy-ca/ca.crt"
          - "--proxy-cert=/proxy-client-tls/tls.crt"
          - "--proxy-key=/proxy-client-tls/tls.key"
          - "--server-port=9092"
          - "--server-key=/user-tls/tls.key"
          - "--server-cert=/user-tls/tls.crt"
          - "--service-proxy-ca-cert=/proxy-ca/ca.crt" # service-proxy is also sign by the singer ca of cluster-proxy. So here we use the same CA cert.
          - "--agent-install-namespace=open-cluster-management-agent-addon"
        env:
        {{- if .Values.hubconfig.proxyConfigs }}
        - name: HTTP_PROXY
          value: {{ .Values.hubconfig.proxyConfigs.HTTP_PROXY }}
        - name: HTTPS_PROXY
          value: {{ .Values.hubconfig.proxyConfigs.HTTPS_PROXY }}
        - name: NO_PROXY
          value: {{ .Values.hubconfig.proxyConfigs.NO_PROXY }}
        {{- end }}
        resources:
          requests:
            cpu: 25m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        livenessProbe:
          httpGet:
            path: /healthz
            scheme: HTTP
            port: 8000
          initialDelaySeconds: 2
          periodSeconds: 10
        volumeMounts:
          - name: user-tls-vol
            mountPath: /user-tls
            readOnly: true
          - name: proxy-server-ca
            mountPath: /proxy-ca
            readOnly: true
          - name: proxy-client-cert
            mountPath: /proxy-client-tls
            readOnly: true
        ports:
          - name: user-port
            containerPort: 9092
            protocol: TCP
      volumes:
        - name: user-tls-vol
          secret:
            secretName: cluster-proxy-user-serving-cert
        - name: proxy-server-ca
          secret:
            secretName: proxy-server-ca
        - name: proxy-client-cert
          secret:
            secretName: proxy-client
        - name: signer-ca
          secret:
            secretName: cluster-proxy-signer
      {{- if .Values.global.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.pullSecret }}
      {{- end }}
      {{- with .Values.hubconfig.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.hubconfig.tolerations }}
      tolerations:
      {{- range . }}
      - {{ if .Key }} key: {{ .Key }} {{- end }}
        {{ if .Operator }} operator: {{ .Operator }} {{- end }}
        {{ if .Value }} value: {{ .Value }} {{- end }}
        {{ if .Effect }} effect: {{ .Effect }} {{- end }}
        {{ if .TolerationSeconds }} tolerationSeconds: {{ .TolerationSeconds }} {{- end }}
        {{- end }}
{{- end }}
